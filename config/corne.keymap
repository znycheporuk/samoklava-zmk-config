/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ADJUST  3
#define LWR LOWER
#define RSE RAISE
#define ADJ ADJUST

&mt {
    quick-tap-ms = <180>;
    tapping-term-ms = <250>;
};

&lt {
    quick_tap_ms = <200>;
    tapping-term-ms = <180>;
};

/ {
    behaviors {
        //                 Key positions
        //       0  1  2  3  4  5    6  7  8  9 10 11
        //      12 13 14 15 16 17   18 19 20 21 22 23
        //      24 25 26 27 28 29   30 31 32 33 34 35
        //               36 37 38   39 40 41

        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            quick-tap-ms = <180>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <
                                         6  7  8  9 10
                       13 14 15 16      18 19 20 21 22
                          26            30 31 32 33 34
                             36 37 38   39 40 41
            >;

            // <---[[right-hand keys + all homerow mods + all thumbs]]
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            quick-tap-ms = <180>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <
                        1  2  3  4  5
                       13 14 15 16 17      19 20 21 22
                       25 26 27 28 29            33
                             36 37 38   39 40 41
            >;

            // <---[[left-hand keys + all homerow mods + all thumbs]]
        };

        lock: lock {
            compatible = "zmk,behavior-tap-dance";
            label = "LOCK";
            #binding-cells = <0>;
            bindings = <&lt 0 SPACE>, <&kp K_LOCK>;

            tapping-term-ms = <200>;
        };

        lang: lang {
            compatible = "zmk,behavior-tap-dance";
            label = "LANG";
            #binding-cells = <0>;
            bindings = <&lt 0 ENTER>, <&lang_m>;
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <2 14>;
            layers = <0>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <14 26>;
            layers = <0>;
        };

        backspase {
            bindings = <&kp BACKSPACE>;
            key-positions = <9 21>;
            layers = <0>;
        };

        del {
            bindings = <&kp DEL>;
            key-positions = <33 21>;
            layers = <0>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <4 4>;
            then-layer = <4>;
        };
    };

    macros {
        lang_m: lang_m {
            compatible = "zmk,behavior-macro";
            label = "LANG_M";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LGUI>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&none  &kp Q        &kp W        &kp F         &kp P         &kp B        &kp J        &kp L            &kp U         &kp Y        &kp SINGLE_QUOTE  &none
&none  &hml LCMD A  &hml RALT R  &hml LCTRL S  &hml LSHFT T  &kp G        &kp M        &hmr RSHFT N     &hmr RCTRL E  &hmr RALT I  &hmr RCMD O       &none
&none  &kp Z        &hml LALT X  &kp C         &kp D         &kp V        &kp K        &kp H            &kp COMMA     &kp DOT      &kp FSLH          &none
                                 &lt 2 ESCAPE  &lt 3 SPACE   &lt 0 TAB    &lt 0 ENTER  &lt 1 BACKSPACE  &lt 5 DELETE
            >;
        };

        num {
            bindings = <
&trans  &kp MINUS     &kp N1  &kp N2   &kp N3     &kp LS(STAR)    &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp LS(PLUS)  &kp N4  &kp N5   &kp N6     &kp N0          &lock   &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans  &kp EQUAL     &kp N7  &kp N8   &kp N9     &kp FSLH        &trans  &trans     &trans     &trans    &trans    &trans
                              &kp ESC  &kp SPACE  &kp TAB         &trans  &trans     &trans
            >;
        };

        media {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1       &bt BT_SEL 2      &bt BT_SEL 3  &trans
&trans  &trans  &trans  &trans  &trans  &lock     &trans      &kp K_MUTE    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP   &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans      &kp K_PREV    &kp K_STOP         &kp K_PLAY_PAUSE  &kp K_NEXT    &trans
                        &trans  &trans  &trans    &trans      &trans        &trans
            >;
        };

        nav {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans    &kp K_REDO  &kp K_PASTE  &kt K_COPY  &kp K_CUT  &kp K_UNDO  &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &lock     &kp CAPS    &kp LEFT     &kp DOWN    &kp UP     &kp RIGHT   &trans
&trans  &trans    &trans    &trans     &trans     &trans    &kp INSERT  &kp HOME     &kp PG_DN   &kp PG_UP  &kp END     &trans
                            &trans     &trans     &trans    &trans      &trans       &trans
            >;
        };

        sym {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        fun {
            bindings = <
&trans  &trans  &kp F1  &kp F2  &kp F3  &kp F10    &trans  &trans     &trans     &trans    &trans    &trans
&trans  &trans  &kp F4  &kp F5  &kp F6  &kp F11    &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans  &trans  &kp F7  &kp F8  &kp F9  &kp F12    &trans  &trans     &trans     &trans    &trans    &trans
                        &trans  &trans  &trans     &trans  &trans     &trans
            >;
        };
    };
};
