/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ADJUST  3
#define LWR LOWER
#define RSE RAISE
#define ADJ ADJUST

&mt {
    quick-tap-ms = <180>;
    tapping-term-ms = <250>;
};

&lt {
    quick_tap_ms = <200>;
    tapping-term-ms = <180>;
};

/ {
    behaviors {
        //                 Key positions
        //       0  1  2  3  4  5    6  7  8  9 10 11
        //      12 13 14 15 16 17   18 19 20 21 22 23
        //      24 25 26 27 28 29   30 31 32 33 34 35
        //               36 37 38   39 40 41

        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            quick-tap-ms = <180>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <
                                         6  7  8  9 10
                       13 14 15 16      18 19 20 21 22
                          26            30 31 32 33 34
                             36 37 38   39 40 41
            >;

            // <---[[right-hand keys + all homerow mods + all thumbs]]
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            quick-tap-ms = <180>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <
                        1  2  3  4  5
                       13 14 15 16 17      19 20 21 22
                       25 26 27 28 29            33
                             36 37 38   39 40 41
            >;

            // <---[[left-hand keys + all homerow mods + all thumbs]]
        };

        lock: lock {
            compatible = "zmk,behavior-tap-dance";
            label = "LOCK";
            #binding-cells = <0>;
            bindings = <&lt 2 SPACE>, <&kp K_LOCK>;

            tapping-term-ms = <200>;
        };

        lang: lang {
            compatible = "zmk,behavior-tap-dance";
            label = "LANG";
            #binding-cells = <0>;
            bindings = <&lt 2 ENTER>, <&lang_m>;
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <2 14>;
            layers = <0>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <14 26>;
            layers = <0>;
        };

        backspase {
            bindings = <&kp BACKSPACE>;
            key-positions = <9 21>;
            layers = <0>;
        };

        del {
            bindings = <&kp DEL>;
            key-positions = <33 21>;
            layers = <0>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    macros {
        lang_m: lang_m {
            compatible = "zmk,behavior-macro";
            label = "LANG_M";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LGUI>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none  &kp Q        &kp W        &kp F            &kp P         &kp B    &kp J  &kp L         &kp U         &kp Y          &kp SINGLE_QUOTE  &none
&none  &hml LCMD A  &hml RALT R  &hml LCTRL S     &hml LSHFT T  &kp G    &kp M  &hmr RSHFT N  &hmr RCTRL E  &hmr RALT I    &hmr RCMD O       &none
&none  &kp Z        &hml LALT X  &kp C            &kp D         &kp V    &kp K  &kp H         &kp COMMA     &hmr LALT DOT  &kp FSLH          &none
                                 &lt 3 BACKSPACE  &lt 1 SPACE   &lock    &lang  &lt 1 ENTER   &kp SPACE
            >;
        };

        lower_layer {
            bindings = <
&none  &kp N1    &kp N2    &kp N3       &kp N4        &kp N5         &kp NUMBER_6   &kp NUMBER_7  &kp NUMBER_8  &kp N9         &kp N0      &none
&none  &kp LCMD  &kp RALT  &kp LCTRL    &kp LSHFT     &none          &kp LEFT       &kp DOWN      &kp UP_ARROW  &kp RIGHT      &kp RCMD    &none
&none  &none     &kp LALT  &none        &kp Y         &none          &kp END        &none         &kp PG_DN     &hmr LALT END  &caps_word  &none
                           &lt RSE ESC  &lt LWR QUOT  &lt 2 SPACE    &mt RSHFT RET  &mo RSE       &lt LWR TAB
            >;
        };

        raise_layer {
            bindings = <
&none  &kp EXCL      &kp AT        &kp HASH       &kp DLLR       &kp PRCNT    &kp EQUAL      &kp NUMBER_7         &kp NUMBER_8         &kp NUMBER_9        &kp GRAVE        &none
&none  &hml LCMD F1  &hml RALT F2  &hml LCTRL F3  &hml LSHFT F2  &kp F5       &kp MINUS      &hmr RSHFT NUMBER_4  &hmr RCTRL NUMBER_5  &hmr RALT NUMBER_6  &hmr RCMD MINUS  &none
&none  &kp F6        &hml LALT F7  &kp F8         &kp F11        &kp F12      &kp NUMBER_0   &kp NUMBER_1         &kp NUMBER_2         &kp NUMBER_3        &kp BSLH         &none
                                   &lt RSE ESC    &lt 1 ENTER    &kp GRAVE    &mt RSHFT RET  &lt RSE BSPC         &lt LWR TAB
            >;
        };

        adjust_layer {
            bindings = <
&none  &bt BT_CLR    &none         &none         &none         &none           &none         &kp K_MUTE    &none  &none  &bootloader  &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp C_BRI_UP  &kp C_VOL_UP  &none  &none  &none        &none
&none  &none         &none         &none         &none         &none           &kp C_BRI_DN  &kp C_VOL_DN  &none  &none  &none        &none
                                   &none         &none         &none           &none         &none         &none
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
